{"version":3,"sources":["components/app/app.tsx","constants/entity.ts","utils/entity-map.ts","constants/children/constants.ts","constants/children/children.ts","constants/entities.ts","utils/entity-names.ts","utils/global-state-provider.ts","components/entity/components/info.tsx","components/entity/entity.tsx","components/results/results.tsx","components/search/search.tsx","serviceWorker.ts","index.tsx"],"names":["App","className","Search","Results","Entity","NESTLE_OUR_BRANDS","parent","Nestle","sources","NESTLE_SOAKED_WATER_CONTROVERSY","CHILDREN","Aero","Alpo","Beneful","Bonka","Boost","Buitoni","Butterfinger","Cailler","Carnation","Cerelac","Cheerios","Chef","Extreme","Felix","Fitness","Friskies","Gerber","Gourmet","Herta","KitKat","Lion","Maggi","Milkybar","Milo","Movenpick","NaturNes","Nescafe","Nespresso","Nesquik","Nestea","Nido","Oreo","Orion","Peptamen","Perrier","PowerBar","Purina","Resource","Sjora","Smarties","Supligen","Thomy","Wonka","ENTITIES","reasons","entityMap","Map","Object","entries","entityName","partialEntity","set","name","childName","partialChild","get","Error","parentSources","entityNames","keys","push","createProvider","search","React","memo","children","ref","createRef","useEffect","globalStateProvider","setGlobal","current","scrollIntoView","parentSourcesCount","length","to","encodeURIComponent","map","parentSource","index","href","key","rel","target","reason","source","URL","hostname","useLocation","entity","useMemo","URLSearchParams","fuzzyPreparedEntityNames","fuzzysort","prepare","FUZZYSORT_OPTIONS","allowTypo","limit","threshold","useGlobal","fuzzyResults","go","fuzzyResult","title","setSearch","handleSearchChange","useCallback","e","a","currentTarget","value","onChange","placeholder","Boolean","window","location","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2RAKe,SAASA,IACtB,OACE,kBAAC,IAAD,KACE,0BAAMC,UAAU,OACd,0CACA,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,Q,ICZHC,E,gCAAAA,K,iBAAAA,M,KCKL,IDDeA,QEDFC,EAA2B,CACtCC,OAAQF,EAAOG,OACfC,QAAS,CACP,iGAISC,EAAyC,CACpDH,OAAQF,EAAOG,OACfC,QAAS,CACP,wGC2GWE,EA1GyB,CACtCC,KAAMN,EACNO,KAAMP,EACN,YAAaI,EACb,kBAAmBJ,EACnBQ,QAASR,EACT,6BAA8B,CAC5BC,OAAQF,EAAOG,OACfC,QAAS,CACP,wFAGJM,MAAO,CACLR,OAAQF,EAAOG,OACfC,QAAS,CAAC,4DAEZO,MAAOV,EACPW,QAASX,EACTY,aAAcR,EACdS,QAASb,EACTc,UAAWd,EACX,WAAYA,EACZe,QAASf,EACTgB,SAAUhB,EACViB,KAAMjB,EACN,YAAaA,EACb,kCAAmCA,EACnC,cAAeI,EACf,cAAeJ,EACf,WAAYA,EACZ,WAAYA,EACZkB,QAASlB,EACT,cAAeA,EACfmB,MAAOnB,EACPoB,QAASpB,EACTqB,SAAUrB,EACVsB,OAAQtB,EACR,iBAAkBI,EAClBmB,QAASvB,EACT,cAAeI,EACf,cAAeJ,EACfwB,MAAOxB,EACP,cAAeA,EACfyB,OAAQzB,EACR,cAAeA,EACf,eAAgBA,EAChB,UAAWI,EACXsB,KAAM1B,EACN2B,MAAO3B,EACP4B,SAAU5B,EACV6B,KAAM7B,EACN,UAAWA,EACX8B,UAAW9B,EACX+B,SAAU/B,EACVgC,QAAShC,EACT,iBAAkBA,EAClB,qBAAsBA,EACtB,kBAAmBA,EACnB,iBAAkBA,EAClB,sBAAuBA,EACvB,eAAgBA,EAChBiC,UAAWjC,EACXkC,QAASlC,EACT,iBAAkBA,EAClBmC,OAAQnC,EACR,mBAAoBA,EACpB,mBAAoBA,EACpB,mCAAoCA,EACpCoC,KAAMpC,EACN,gBAAiBA,EACjBqC,KAAMjC,EACNkC,MAAOtC,EACPuC,SAAUvC,EACVwC,QAASxC,EACT,gBAAiBA,EACjByC,SAAUrC,EACVsC,OAAQ1C,EACR,aAAcA,EACd,kBAAmBA,EACnB,iBAAkBA,EAClB2C,SAAU3C,EACV,gBAAiBA,EACjB,iBAAkBI,EAClBwC,MAAO5C,EACP6C,SAAU7C,EACV,YAAa,CACXC,OAAQF,EAAOG,OACfC,QAAS,CACP,yEACA,iFACA,kEAGJ,aAAcH,EACd8C,SAAU,CACR7C,OAAQF,EAAOG,OACfC,QAAS,CACP,oIAGJ,kBAAmBC,EACnB2C,MAAO/C,EACP,aAAcA,EACdgD,MAAO5C,G,QCzGM6C,EATyC,eACrDlD,EAAOG,OAAS,CACfgD,QAAS,CACP,qGAEF/C,QAAS,CAAC,uDHLRgD,EAAiC,IAAIC,IAE3C,MAA0CC,OAAOC,QAAQL,GAAzD,eAAoE,CAAC,IAAD,sBAAxDM,EAAwD,KAA5CC,EAA4C,KAClEL,EAAUM,IAAIF,EAAd,2BACKC,GADL,IAEEE,KAAMH,KAIV,cAAwCF,OAAOC,QAAQjD,GAAvD,eAAkE,CAAC,IAAD,sBAAtDsD,EAAsD,KAA3CC,EAA2C,KAC1D3D,EAA6BkD,EAAUU,IAAID,EAAa3D,QAC9D,IAAKA,EACH,MAAM,IAAI6D,MAAM,+BAElBX,EAAUM,IAAIE,EAAW,CACvBD,KAAMC,EACNT,QAASjD,EAAOiD,QAChBjD,OAAQ2D,EAAa3D,OACrB8D,cAAeH,EAAazD,QAC5BA,QAASF,EAAOE,UIlBpB,IJsBegD,QIxBTa,EAAwB,GAE9B,MAAyBX,OAAOY,KAAKhB,GAArC,eAAgD,CAA3C,IAAMM,EAAU,KACnBS,EAAYE,KAAKX,GAGnB,cAAyBF,OAAOY,KAAK5D,GAArC,eAAgD,CAA3C,IAAMkD,EAAU,KACnBS,EAAYE,KAAKX,GAGJS,Q,QCNAG,2BAAsB,CACnCC,OAAQ,KCGKC,G,MAAAA,IAAMC,MAAK,YAAkD,IAAlCC,EAAiC,EAAjCA,SAChCb,EAAkDa,EAAlDb,KAAMzD,EAA4CsE,EAA5CtE,OAAQ8D,EAAoCQ,EAApCR,cAAeb,EAAqBqB,EAArBrB,QAAS/C,EAAYoE,EAAZpE,QAExCqE,EAAiCH,IAAMI,YAE7CJ,IAAMK,WAAU,WACdC,EAAoBC,UAAU,CAAER,OAAQ,OACvC,CAACG,IAEJF,IAAMK,WAAU,WACVF,EAAIK,SAAWL,EAAIK,QAAQC,gBAC7BN,EAAIK,QAAQC,mBAEb,CAACN,IAEJ,IAAMO,EAA6BhB,EAAgBA,EAAciB,OAAS,EAE1E,OACE,6BAASpF,UAAU,OAAO4E,IAAKA,GAC7B,4BAAKd,GACJzD,GACC,yBAAKL,UAAU,wBAAf,kBACkB,IAChB,gCACE,kBAAC,IAAD,CAAMqF,GAAE,kBAAaC,mBAAmBjF,KAAYA,IAErD8D,GACC,oCACG,IADH,IAGGA,EAAcoB,KACb,SAACC,EAAsBC,GAAvB,OACE,uBACEC,KAAMF,EACNG,IAAKH,EACLI,IAAI,+BACJC,OAAO,UAJT,SAMSV,EAAqB,EAAIM,EAAQ,EAAI,OAXpD,MAoBLnC,EAAQiC,KACP,SAACO,EAAgBL,GAAjB,OACE,uBAAGE,IAAKF,GAAQK,MAGpB,6BAAS9F,UAAU,iBACjB,wCACA,4BACGO,EAAQgF,KACP,SAACQ,GAAD,OACE,wBAAIJ,IAAKI,GACP,uBACEL,KAAMK,EACNH,IAAI,+BACJC,OAAO,UAEN,IAAIG,IAAID,GAAQE,qBCnEpB,SAAS9F,IAA+B,IAC7CqE,EAAW0B,cAAX1B,OAEF2B,EAA4B1B,IAAM2B,SAAQ,WAC9C,IACMzC,EADmC,IAAI0C,gBAAgB7B,GACXP,IAAI,UACtD,GAAmB,OAAfN,EACF,OAAO,KAET,IAAMwC,EAAiC5C,EAAUU,IAAIN,GACrD,MAAsB,qBAAXwC,EACF,KAEFA,IACN,CAAC3B,IAEJ,OAAe,OAAX2B,EACK,KAGF,kBAAC,EAAD,KAAOA,G,qBCpBVG,G,MAAiDlC,EAAYmB,KACjE,SAAC5B,GAAD,OACE4C,IAAUC,QAAQ7C,OAGhB8C,EAAuC,CAC3CC,WAAW,EACXC,MAAO,IACPC,WAAY,KAGC,SAAS1G,IAAwB,IAAD,EAC5B6E,EAAoB8B,UAAU,UAAxCrC,EADsC,oBAGvCsC,EAAkCrC,IAAM2B,SAAQ,WACpD,OAAOG,IAAUQ,GAAGvC,EAAQ8B,EAA0BG,KACrD,CAACjC,IAEJ,OACE,yBAAKxE,UAAU,WACb,4BACG8G,EAAavB,KACZ,SAACyB,GAAD,OACE,wBAAIrB,IAAKqB,EAAYnB,QACnB,kBAAC,IAAD,CACER,GAAE,kBAAa2B,EAAYnB,QAC3BoB,MAAOD,EAAYnB,QAElBmB,EAAYnB,c,6BC/Bd,SAAS5F,IAAuB,IAAD,EAChB8E,EAAoB8B,UAAU,UADd,mBACrCrC,EADqC,KAC7B0C,EAD6B,KAGtCC,EAAqB1C,IAAM2C,YAAN,uCACzB,WAAOC,GAAP,SAAAC,EAAA,sEACQJ,EAAUG,EAAEE,cAAcC,OADlC,2CADyB,sDAIzB,CAACN,IAGH,OACE,2BACEO,SAAUN,EACVO,YAAY,qBACZF,MAAOhD,I,MCLOmD,QACW,cAA7BC,OAAOC,SAAS5B,UAEe,UAA7B2B,OAAOC,SAAS5B,UAEhB2B,OAAOC,SAAS5B,SAAS6B,MACvB,2DCZNC,IAASC,OAAO,kBAACjI,EAAD,MAASkI,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.811b7075.chunk.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Entity, Results, Search } from '..';\nimport './app.scss';\n\nexport default function App(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <main className=\"app\">\n        <h1>Peoplecott</h1>\n        <Entity />\n        <Search />\n        <Results />\n      </main>\n    </BrowserRouter>\n  );\n}\n","enum Entity {\n  Nestle = 'Nestle',\n}\n\nexport default Entity;\n","import { CHILDREN, ENTITIES } from '../constants';\nimport Entity from '../types/entity';\n\nconst entityMap: Map<string, Entity> = new Map();\n\nfor (const [entityName, partialEntity] of Object.entries(ENTITIES)) {\n  entityMap.set(entityName, {\n    ...partialEntity,\n    name: entityName,\n  });\n}\n\nfor (const [childName, partialChild] of Object.entries(CHILDREN)) {\n  const parent: Entity | undefined = entityMap.get(partialChild.parent);\n  if (!parent) {\n    throw new Error('Child does not have parent.');\n  }\n  entityMap.set(childName, {\n    name: childName,\n    reasons: parent.reasons,\n    parent: partialChild.parent,\n    parentSources: partialChild.sources,\n    sources: parent.sources,\n  });\n}\n\nexport default entityMap;\n","import Entity from '../entity';\nimport { Child } from './types';\n\nexport const NESTLE_OUR_BRANDS: Child = {\n  parent: Entity.Nestle,\n  sources: [\n    'https://web.archive.org/web/20200405214442/https://www.nestle.com/aboutus/overview/ourbrands',\n  ],\n};\n\nexport const NESTLE_SOAKED_WATER_CONTROVERSY: Child = {\n  parent: Entity.Nestle,\n  sources: [\n    'https://www.coloradoindependent.com/2010/08/19/nestle-soaked-in-water-controversy-around-the-world/',\n  ],\n};\n","import Entity from '../entity';\nimport {\n  NESTLE_OUR_BRANDS,\n  NESTLE_SOAKED_WATER_CONTROVERSY,\n} from './constants';\nimport { Child } from './types';\n\n/*\nTo add a child company, use the format\n  ChildCompanyName: {\n    parent: Entity.ParentCompany,\n    source: 'https://...',\n  },\n*/\nconst CHILDREN: Record<string, Child> = {\n  Aero: NESTLE_OUR_BRANDS,\n  Alpo: NESTLE_OUR_BRANDS,\n  'Baby Ruth': NESTLE_SOAKED_WATER_CONTROVERSY,\n  'Bakers Complete': NESTLE_OUR_BRANDS,\n  Beneful: NESTLE_OUR_BRANDS,\n  'Blue Bottle Coffee Company': {\n    parent: Entity.Nestle,\n    sources: [\n      'https://www.nytimes.com/2017/09/14/business/dealbook/nestle-blue-bottle-coffee.html',\n    ],\n  },\n  Bonka: {\n    parent: Entity.Nestle,\n    sources: ['https://books.google.com/books?id=O2hVVxHY9ecC&pg=PA176'],\n  },\n  Boost: NESTLE_OUR_BRANDS,\n  Buitoni: NESTLE_OUR_BRANDS,\n  Butterfinger: NESTLE_SOAKED_WATER_CONTROVERSY,\n  Cailler: NESTLE_OUR_BRANDS,\n  Carnation: NESTLE_OUR_BRANDS,\n  'Cat Chow': NESTLE_OUR_BRANDS,\n  Cerelac: NESTLE_OUR_BRANDS,\n  Cheerios: NESTLE_OUR_BRANDS,\n  Chef: NESTLE_OUR_BRANDS,\n  'Chef-Mate': NESTLE_OUR_BRANDS,\n  \"Chef Michael's Canine Creations\": NESTLE_OUR_BRANDS,\n  'Chips Ahoy!': NESTLE_SOAKED_WATER_CONTROVERSY,\n  'Coffee-Mate': NESTLE_OUR_BRANDS,\n  'Dog Chow': NESTLE_OUR_BRANDS,\n  \"Dreyer's\": NESTLE_OUR_BRANDS,\n  Extreme: NESTLE_OUR_BRANDS,\n  'Fancy Feast': NESTLE_OUR_BRANDS,\n  Felix: NESTLE_OUR_BRANDS,\n  Fitness: NESTLE_OUR_BRANDS,\n  Friskies: NESTLE_OUR_BRANDS,\n  Gerber: NESTLE_OUR_BRANDS,\n  'Golden Grahams': NESTLE_SOAKED_WATER_CONTROVERSY,\n  Gourmet: NESTLE_OUR_BRANDS,\n  'Juicy Juice': NESTLE_SOAKED_WATER_CONTROVERSY,\n  'Haagen-Dazs': NESTLE_OUR_BRANDS,\n  Herta: NESTLE_OUR_BRANDS,\n  'Hot Pockets': NESTLE_OUR_BRANDS,\n  KitKat: NESTLE_OUR_BRANDS,\n  'La Laitiere': NESTLE_OUR_BRANDS,\n  'Lean Cuisine': NESTLE_OUR_BRANDS,\n  \"Libby's\": NESTLE_SOAKED_WATER_CONTROVERSY,\n  Lion: NESTLE_OUR_BRANDS,\n  Maggi: NESTLE_OUR_BRANDS,\n  Milkybar: NESTLE_OUR_BRANDS,\n  Milo: NESTLE_OUR_BRANDS,\n  \"Minor's\": NESTLE_OUR_BRANDS,\n  Movenpick: NESTLE_OUR_BRANDS,\n  NaturNes: NESTLE_OUR_BRANDS,\n  Nescafe: NESTLE_OUR_BRANDS,\n  'Nescafe 3 in 1': NESTLE_OUR_BRANDS,\n  'Nescafe Cappuccino': NESTLE_OUR_BRANDS,\n  'Nescafe Classic': NESTLE_OUR_BRANDS,\n  'Nescafe Decaff': NESTLE_OUR_BRANDS,\n  'Nescafe Dolce Gusto': NESTLE_OUR_BRANDS,\n  'Nescafe Gold': NESTLE_OUR_BRANDS,\n  Nespresso: NESTLE_OUR_BRANDS,\n  Nesquik: NESTLE_OUR_BRANDS,\n  'Nesquik Cereal': NESTLE_OUR_BRANDS,\n  Nestea: NESTLE_OUR_BRANDS,\n  'Nestle Ice Cream': NESTLE_OUR_BRANDS,\n  'Nestle Pure Life': NESTLE_OUR_BRANDS,\n  \"Nestle Les Recettes de l'Atelier\": NESTLE_OUR_BRANDS,\n  Nido: NESTLE_OUR_BRANDS,\n  'Nutren Junior': NESTLE_OUR_BRANDS,\n  Oreo: NESTLE_SOAKED_WATER_CONTROVERSY,\n  Orion: NESTLE_OUR_BRANDS,\n  Peptamen: NESTLE_OUR_BRANDS,\n  Perrier: NESTLE_OUR_BRANDS,\n  'Poland Spring': NESTLE_OUR_BRANDS,\n  PowerBar: NESTLE_SOAKED_WATER_CONTROVERSY,\n  Purina: NESTLE_OUR_BRANDS,\n  'Purina ONE': NESTLE_OUR_BRANDS,\n  'Purina Pro Plan': NESTLE_OUR_BRANDS,\n  'Quality Street': NESTLE_OUR_BRANDS,\n  Resource: NESTLE_OUR_BRANDS,\n  'S. Pellegrino': NESTLE_OUR_BRANDS,\n  'Shredded Wheat': NESTLE_SOAKED_WATER_CONTROVERSY,\n  Sjora: NESTLE_OUR_BRANDS,\n  Smarties: NESTLE_OUR_BRANDS,\n  'Special.T': {\n    parent: Entity.Nestle,\n    sources: [\n      'http://uk.reuters.com/article/uk-nestle-specialt-idUKBRE96U05C20130731',\n      'https://www.designweek.co.uk/inspiration/nestle-special-t-packaging-bb-studio/',\n      'https://www.nytimes.com/2010/05/20/business/global/20tea.html',\n    ],\n  },\n  \"Stouffer's\": NESTLE_OUR_BRANDS,\n  Supligen: {\n    parent: Entity.Nestle,\n    sources: [\n      'https://www.dairyreporter.com/Article/2015/11/19/Nestle-Jamaica-to-divest-local-dairy-business-to-focus-on-international-brands',\n    ],\n  },\n  \"Taster's Choice\": NESTLE_SOAKED_WATER_CONTROVERSY,\n  Thomy: NESTLE_OUR_BRANDS,\n  'Toll House': NESTLE_OUR_BRANDS,\n  Wonka: NESTLE_SOAKED_WATER_CONTROVERSY,\n};\n\nexport default CHILDREN;\n","import EntityType from '../types/entity';\nimport Entity from './entity';\n\nconst ENTITIES: Record<string, Omit<EntityType, 'name'>> = {\n  [Entity.Nestle]: {\n    reasons: [\n      'Nestlé aggressively markets breast milk substitutes, particularly in underdeveloped countries.',\n    ],\n    sources: ['https://en.wikipedia.org/wiki/Nestl%C3%A9_boycott'],\n  },\n};\n\nexport default ENTITIES;\n","import { CHILDREN, ENTITIES } from '../constants';\n\nconst entityNames: string[] = [];\n\nfor (const entityName of Object.keys(ENTITIES)) {\n  entityNames.push(entityName);\n}\n\nfor (const entityName of Object.keys(CHILDREN)) {\n  entityNames.push(entityName);\n}\n\nexport default entityNames;\n","import { createProvider } from 'reactn';\n\ninterface State {\n  search: string;\n}\n\nexport default createProvider<State>({\n  search: '',\n});\n","import React, { ReactElement, RefObject } from 'react';\nimport { Link } from 'react-router-dom';\nimport Entity from '../../../types/entity';\nimport { globalStateProvider } from '../../../utils';\nimport './info.scss';\n\ninterface Props {\n  children: Entity;\n}\n\nexport default React.memo(function Info({ children }: Props): ReactElement {\n  const { name, parent, parentSources, reasons, sources } = children;\n\n  const ref: RefObject<HTMLDivElement> = React.createRef();\n\n  React.useEffect((): void => {\n    globalStateProvider.setGlobal({ search: '' });\n  }, [children]);\n\n  React.useEffect((): void => {\n    if (ref.current && ref.current.scrollIntoView) {\n      ref.current.scrollIntoView();\n    }\n  }, [ref]);\n\n  const parentSourcesCount: number = parentSources ? parentSources.length : 0;\n\n  return (\n    <section className=\"info\" ref={ref}>\n      <h2>{name}</h2>\n      {parent && (\n        <div className=\"info__parent-company\">\n          Parent company:{' '}\n          <strong>\n            <Link to={`?entity=${encodeURIComponent(parent)}`}>{parent}</Link>\n          </strong>\n          {parentSources && (\n            <>\n              {' '}\n              (\n              {parentSources.map(\n                (parentSource: string, index: number): ReactElement => (\n                  <a\n                    href={parentSource}\n                    key={parentSource}\n                    rel=\"nofollow noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    source{parentSourcesCount > 1 ? index + 1 : ''}\n                  </a>\n                ),\n              )}\n              )\n            </>\n          )}\n        </div>\n      )}\n      {reasons.map(\n        (reason: string, index: number): ReactElement => (\n          <p key={index}>{reason}</p>\n        ),\n      )}\n      <section className=\"info__sources\">\n        <h3>Sources:</h3>\n        <ul>\n          {sources.map(\n            (source: string): ReactElement => (\n              <li key={source}>\n                <a\n                  href={source}\n                  rel=\"nofollow noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  {new URL(source).hostname}\n                </a>\n              </li>\n            ),\n          )}\n        </ul>\n      </section>\n    </section>\n  );\n});\n","import React, { ReactElement } from 'react';\nimport { useLocation } from 'react-router';\nimport EntityType from '../../types/entity';\nimport { entityMap } from '../../utils';\nimport { Info } from './components';\n\nexport default function Entity(): null | ReactElement {\n  const { search } = useLocation();\n\n  const entity: EntityType | null = React.useMemo((): EntityType | null => {\n    const urlSearchParams: URLSearchParams = new URLSearchParams(search);\n    const entityName: null | string = urlSearchParams.get('entity');\n    if (entityName === null) {\n      return null;\n    }\n    const entity: EntityType | undefined = entityMap.get(entityName);\n    if (typeof entity === 'undefined') {\n      return null;\n    }\n    return entity;\n  }, [search]);\n\n  if (entity === null) {\n    return null;\n  }\n\n  return <Info>{entity}</Info>;\n}\n","import fuzzysort from 'fuzzysort';\nimport React from 'react';\nimport { entityNames, globalStateProvider } from '../../utils';\nimport './results.scss';\nimport { Link } from 'react-router-dom';\n\nconst fuzzyPreparedEntityNames: Fuzzysort.Prepared[] = entityNames.map(\n  (entityName: string): Fuzzysort.Prepared =>\n    fuzzysort.prepare(entityName) as Fuzzysort.Prepared,\n);\n\nconst FUZZYSORT_OPTIONS: Fuzzysort.Options = {\n  allowTypo: true,\n  limit: 100,\n  threshold: -10000,\n};\n\nexport default function Results(): JSX.Element {\n  const [search] = globalStateProvider.useGlobal('search');\n\n  const fuzzyResults: Fuzzysort.Results = React.useMemo((): Fuzzysort.Results => {\n    return fuzzysort.go(search, fuzzyPreparedEntityNames, FUZZYSORT_OPTIONS);\n  }, [search]);\n\n  return (\n    <div className=\"results\">\n      <ul>\n        {fuzzyResults.map(\n          (fuzzyResult: Fuzzysort.Result): JSX.Element => (\n            <li key={fuzzyResult.target}>\n              <Link\n                to={`?entity=${fuzzyResult.target}`}\n                title={fuzzyResult.target}\n              >\n                {fuzzyResult.target}\n              </Link>\n            </li>\n          ),\n        )}\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport { globalStateProvider } from '../../utils';\n\nexport default function Search(): JSX.Element {\n  const [search, setSearch] = globalStateProvider.useGlobal('search');\n\n  const handleSearchChange = React.useCallback(\n    async (e: ChangeEvent<HTMLInputElement>): Promise<void> => {\n      await setSearch(e.currentTarget.value);\n    },\n    [setSearch],\n  );\n\n  return (\n    <input\n      onChange={handleSearchChange}\n      placeholder=\"Search for a brand\"\n      value={search}\n    />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}